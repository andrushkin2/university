--lpm_decode CASCADE_CHAIN="MANUAL" DEVICE_FAMILY="FLEX10K" IGNORE_CASCADE_BUFFERS="OFF" LPM_DECODES=16 LPM_WIDTH=4 data eq CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=32
--VERSION_BEGIN 9.0SP2 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2009:05:07:10:25:28:SJ cbx_lpm_compare 2009:02:03:01:43:16:SJ cbx_lpm_decode 2008:05:19:10:39:27:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END


-- Copyright (C) 1991-2009 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION cmpr_vlc (dataa[3..0], datab[3..0])
RETURNS ( aeb);

--synthesis_resources = 
SUBDESIGN decode_1te
( 
	data[3..0]	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	cmpr1 : cmpr_vlc;
	cmpr10 : cmpr_vlc;
	cmpr11 : cmpr_vlc;
	cmpr12 : cmpr_vlc;
	cmpr13 : cmpr_vlc;
	cmpr14 : cmpr_vlc;
	cmpr15 : cmpr_vlc;
	cmpr16 : cmpr_vlc;
	cmpr2 : cmpr_vlc;
	cmpr3 : cmpr_vlc;
	cmpr4 : cmpr_vlc;
	cmpr5 : cmpr_vlc;
	cmpr6 : cmpr_vlc;
	cmpr7 : cmpr_vlc;
	cmpr8 : cmpr_vlc;
	cmpr9 : cmpr_vlc;
	const_data0w[3..0]	: WIRE;
	const_data10w[3..0]	: WIRE;
	const_data11w[3..0]	: WIRE;
	const_data12w[3..0]	: WIRE;
	const_data13w[3..0]	: WIRE;
	const_data14w[3..0]	: WIRE;
	const_data15w[3..0]	: WIRE;
	const_data1w[3..0]	: WIRE;
	const_data2w[3..0]	: WIRE;
	const_data3w[3..0]	: WIRE;
	const_data4w[3..0]	: WIRE;
	const_data5w[3..0]	: WIRE;
	const_data6w[3..0]	: WIRE;
	const_data7w[3..0]	: WIRE;
	const_data8w[3..0]	: WIRE;
	const_data9w[3..0]	: WIRE;
	eq_node[15..0]	: WIRE;

BEGIN 
	cmpr1.dataa[] = data[];
	cmpr1.datab[] = const_data0w[];
	cmpr10.dataa[] = data[];
	cmpr10.datab[] = const_data9w[];
	cmpr11.dataa[] = data[];
	cmpr11.datab[] = const_data10w[];
	cmpr12.dataa[] = data[];
	cmpr12.datab[] = const_data11w[];
	cmpr13.dataa[] = data[];
	cmpr13.datab[] = const_data12w[];
	cmpr14.dataa[] = data[];
	cmpr14.datab[] = const_data13w[];
	cmpr15.dataa[] = data[];
	cmpr15.datab[] = const_data14w[];
	cmpr16.dataa[] = data[];
	cmpr16.datab[] = const_data15w[];
	cmpr2.dataa[] = data[];
	cmpr2.datab[] = const_data1w[];
	cmpr3.dataa[] = data[];
	cmpr3.datab[] = const_data2w[];
	cmpr4.dataa[] = data[];
	cmpr4.datab[] = const_data3w[];
	cmpr5.dataa[] = data[];
	cmpr5.datab[] = const_data4w[];
	cmpr6.dataa[] = data[];
	cmpr6.datab[] = const_data5w[];
	cmpr7.dataa[] = data[];
	cmpr7.datab[] = const_data6w[];
	cmpr8.dataa[] = data[];
	cmpr8.datab[] = const_data7w[];
	cmpr9.dataa[] = data[];
	cmpr9.datab[] = const_data8w[];
	const_data0w[] = B"0000";
	const_data10w[] = B"1010";
	const_data11w[] = B"1011";
	const_data12w[] = B"1100";
	const_data13w[] = B"1101";
	const_data14w[] = B"1110";
	const_data15w[] = B"1111";
	const_data1w[] = B"0001";
	const_data2w[] = B"0010";
	const_data3w[] = B"0011";
	const_data4w[] = B"0100";
	const_data5w[] = B"0101";
	const_data6w[] = B"0110";
	const_data7w[] = B"0111";
	const_data8w[] = B"1000";
	const_data9w[] = B"1001";
	eq[] = eq_node[];
	eq_node[] = ( cmpr16.aeb, cmpr15.aeb, cmpr14.aeb, cmpr13.aeb, cmpr12.aeb, cmpr11.aeb, cmpr10.aeb, cmpr9.aeb, cmpr8.aeb, cmpr7.aeb, cmpr6.aeb, cmpr5.aeb, cmpr4.aeb, cmpr3.aeb, cmpr2.aeb, cmpr1.aeb);
END;
--VALID FILE
